
# Database configuration
#db.default.driver=com.mysql.jdbc.Driver
#db.default.url="jdbc:mysql://localhost:13306/distanceLearningHackathon?useSSL=false"
#db.default.username=kevinview
#db.default.password="654321"

db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"


# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
ebean.default="models.*"


play.http.secret.key="kevin"

play.i18n.langs=["en","cn"]

# Registers the request handler
# ~~~~~
# play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
# play.http.filters = "utils.Filters"

# The application DI modules
# ~~~~~
#play.modules.enabled += "modules.BaseModule"
#play.modules.enabled += "modules.JobModule"
#play.modules.enabled += "modules.SilhouetteModule"
#play.modules.enabled += "play.api.libs.mailer.MailerModule"
#play.modules.enabled += "be.objectify.deadbolt.java.DeadboltModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

# The asset configuration
# ~~~~~
#play.assets {
#  path = "/public"
#  urlPrefix = "/assets"
#}

# play.filters.headers.contentSecurityPolicy = "default-src 'self'; script-src 'self' 'unsafe-inline'"

# Security Filter Configuration - Content Security Policy


play.filters.disabled += "play.filters.headers.SecurityHeadersFilter"
# play.filters.disabled+=play.filters.headers


play.filters.hosts {
  allowed = [".","103.4.15.116"]
}

# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/bootstrap.min.css"="max-age=3600"

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

